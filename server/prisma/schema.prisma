// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
// Define Enum Role
enum Role {
  ADMIN
  CUSTOMER
  VENDOR
}

// Define Product model
model Product {
  id          Int          @id @default(autoincrement())
  name        String
  description String
  price       Float
  imageUrl    String
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  orderItems  OrderItem[]  // Opposite relation field for OrderItem
  category    Category?    @relation(fields: [categoryId], references: [id])
  categoryId  Int?         // Optional foreign key for Category
}

// Define Order model
model Order {
  id              Int          @id @default(autoincrement())
  shippingAddress String
  totalAmount     Float
  createdAt       DateTime     @default(now())
  updatedAt       DateTime     @updatedAt
  items           OrderItem[]  // Relationship with OrderItem
  customer        Customer     @relation(fields: [customerId], references: [id])
  customerId      Int
}

// Define OrderItem model
model OrderItem {
  id        Int      @id @default(autoincrement())
  quantity  Int
  product   Product  @relation(fields: [productId], references: [id])
  productId Int
  order     Order    @relation(fields: [orderId], references: [id])
  orderId   Int
}

model User {
  id        Int      @id @default(autoincrement())
  name      String
  email     String   @unique
  password  String
  role      Role     @default(CUSTOMER) 
  status    String   @default("active")  // Add this line for status
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}


// Define Customer model
model Customer {
  id           Int       @id @default(autoincrement())
  name         String
  email        String    @unique
  passwordHash String
  phoneNumber  String?
  address      String?
  orders       Order[]   // Relationship with Order
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
}

// Define Category model
model Category {
  id          Int        @id @default(autoincrement())
  name        String     @unique
  description String?
  products    Product[]  // Relationship with Product
}
